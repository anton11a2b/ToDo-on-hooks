{"version":3,"sources":["Components/tasksFilter/tasksFilter.jsx","Components/footer/footer.jsx","Components/distanceToNow/distanceToNow.jsx","Components/timer/timer.jsx","utils/checkTime.js","Components/task/task.jsx","Components/taskList/taskList.jsx","Components/newTaskForm/newTaskForm.jsx","Components/todo/todo.jsx","index.jsx"],"names":["TasksFilter","label","hasClass","selecteFilter","className","cn","selected","type","onClick","defaultProps","Footer","filters","toDo","clearCompleted","elements","map","event","target","textContent","DistanceToNow","date","useState","formatDistanceToNow","addSuffix","includeSeconds","time","setTime","useEffect","timer","setInterval","clearInterval","Date","Timer","min","sec","started","setStarted","setTimer","minutesLeft","setMinutesLeft","secondsLeft","setSecondsLeft","classNamePlay","hidden","classNamePause","seconds","minutes","newTimer","checkSeconds","checkMinutes","Task","done","modified","onDeleted","onToggleDone","onToggleModified","title","setTitle","completed","editing","checked","onChange","includes","onSubmit","preventDefault","value","autoFocus","TaskList","tasks","id","NewTaskForm","onTaskAdded","onMinChange","onSecChange","setLabel","keyCode","onKeyDown","placeholder","max","Todo","createTask","uuid","isStarted","createFilter","todoData","setTodoData","filtersData","setFiltersData","activeFilter","setActiveFilter","setMinutes","setSeconds","todoCount","filter","el","length","todoDataForRender","checkActiveFilter","Number","newTask","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6316f2ea.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './tasksFilter.css';\n\nconst TasksFilter = ({ label, hasClass, selecteFilter }) => {\n  const className = cn({\n    selected: hasClass,\n  });\n\n  return (\n    <button type=\"button\" className={className} onClick={selecteFilter}>\n      {label}\n    </button>\n  );\n};\n\nTasksFilter.defaultProps = {\n  label: '',\n  hasClass: false,\n  selecteFilter: () => {},\n};\n\nTasksFilter.propTypes = {\n  label: PropTypes.string,\n  hasClass: PropTypes.bool,\n  selecteFilter: PropTypes.func,\n};\n\nexport default TasksFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TasksFilter from '../tasksFilter/tasksFilter';\nimport './footer.css';\n\nconst Footer = ({ filters, toDo, selecteFilter, clearCompleted }) => {\n  const elements = filters.map(({ label, hasClass }) => (\n    <li key={label}>\n      <TasksFilter\n        label={label}\n        hasClass={hasClass}\n        selecteFilter={(event) => selecteFilter(event.target.textContent)}\n      />\n    </li>\n  ));\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{toDo} items left</span>\n      <ul className=\"filters\">{elements}</ul>\n      <button type=\"button\" className=\"clear-completed\" onClick={clearCompleted}>\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.defaultProps = {\n  selecteFilter: () => {},\n  clearCompleted: () => {},\n  filters: [],\n  toDo: 0,\n};\n\nFooter.propTypes = {\n  selecteFilter: PropTypes.func,\n  clearCompleted: PropTypes.func,\n  filters: PropTypes.arrayOf(PropTypes.any),\n  toDo: PropTypes.number,\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\n\nconst DistanceToNow = ({ date }) => {\n  const [time, setTime] = useState(\n    formatDistanceToNow(date, {\n      addSuffix: true,\n      includeSeconds: true,\n    })\n  );\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(\n        () =>\n          formatDistanceToNow(date, {\n            addSuffix: true,\n            includeSeconds: true,\n          }),\n        1000\n      );\n    });\n\n    return () => clearInterval(timer);\n  }, [date]);\n\n  return <span className=\"created\">{time}</span>;\n};\n\nDistanceToNow.defaultProps = {\n  date: new Date(),\n};\n\nDistanceToNow.propTypes = {\n  date: PropTypes.instanceOf(Date),\n};\n\nexport default DistanceToNow;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { checkSeconds, checkMinutes } from '../../utils/checkTime';\n\nconst Timer = ({ min, sec }) => {\n  const [started, setStarted] = useState(false);\n  const [timer, setTimer] = useState(null);\n  const [minutesLeft, setMinutesLeft] = useState(min);\n  const [secondsLeft, setSecondsLeft] = useState(sec);\n\n  useEffect(() => () => clearInterval(timer), [timer]);\n\n  const startTimer = () => {\n    clearInterval(timer);\n\n    setStarted(true);\n\n    let seconds = secondsLeft;\n    let minutes = minutesLeft;\n\n    const newTimer = setInterval(() => {\n      seconds = checkSeconds(minutes, seconds);\n      minutes = checkMinutes(minutes, seconds, timer, setStarted);\n\n      setMinutesLeft(minutes);\n      setSecondsLeft(seconds);\n    }, 1000);\n\n    return setTimer(newTimer);\n  };\n\n  const pauseTimer = () => {\n    setStarted(false);\n\n    clearInterval(timer);\n  };\n\n  const classNamePlay = cn('icon icon-play', { hidden: started });\n  const classNamePause = cn('icon icon-pause', { hidden: !started });\n\n  return (\n    <span className=\"description\">\n      <button type=\"button\" className={classNamePlay} onClick={startTimer} />\n      <button type=\"button\" className={classNamePause} onClick={pauseTimer} />\n      {minutesLeft}:{secondsLeft}\n    </span>\n  );\n};\n\nTimer.defaultProps = {\n  min: '',\n  sec: '',\n};\n\nTimer.propTypes = {\n  min: PropTypes.string,\n  sec: PropTypes.string,\n};\n\nexport default Timer;\n","export const checkSeconds = (minutes, seconds) => {\r\n  if (seconds !== '00') {\r\n    return seconds <= 10 ? `0${seconds - 1}` : seconds - 1;\r\n\t}\r\n\r\n  return minutes === '00' ? '00' : 59;\r\n};\r\n\r\nexport const checkMinutes = (minutes, seconds, timer, setStarted) => {\r\n  if (minutes !== '00' && seconds === 59) {\r\n    return minutes <= 10 ? `0${minutes - 1}` : minutes - 1;\r\n  }\r\n\r\n  if (minutes === '00' && seconds === '00') {\r\n    clearInterval(timer);\r\n    setStarted(false);\r\n  }\r\n\r\n  return minutes;\r\n};\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport DistanceToNow from '../distanceToNow/distanceToNow';\nimport Timer from '../timer/timer';\nimport './task.css';\n\nconst Task = ({ done, hidden, modified, onDeleted, onToggleDone, onToggleModified, min, sec, date, label }) => {\n  const [title, setTitle] = useState(label);\n\n  const onLabelChange = (event) => {\n    setTitle(() => event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    onToggleModified();\n  };\n\n  const className = cn({\n    completed: done,\n    hidden,\n    editing: modified,\n  });\n\n  return (\n    <li className={className}>\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" checked={done} onChange={onToggleDone} />\n        <label>\n          <span className=\"title\">{title}</span>\n          <Timer min={min} sec={sec} />\n          <DistanceToNow date={date} />\n        </label>\n        <button type=\"button\" onClick={onToggleModified} className=\"icon icon-edit\" />\n        <button type=\"button\" onClick={onDeleted} className=\"icon icon-destroy\" />\n      </div>\n      {className.includes('editing') && (\n        <form onSubmit={onSubmit}>\n          <input onChange={onLabelChange} type=\"text\" className=\"edit\" value={title} autoFocus />\n        </form>\n      )}\n    </li>\n  );\n};\n\nTask.defaultProps = {\n  min: '',\n  sec: '',\n  label: '',\n  done: false,\n  hidden: false,\n  modified: false,\n  date: new Date(),\n  onDeleted: () => {},\n  onToggleDone: () => {},\n  onToggleModified: () => {},\n};\n\nTask.propTypes = {\n  min: PropTypes.string,\n  sec: PropTypes.string,\n  label: PropTypes.string,\n  done: PropTypes.bool,\n  hidden: PropTypes.bool,\n  modified: PropTypes.bool,\n  onDeleted: PropTypes.func,\n  onToggleDone: PropTypes.func,\n  onToggleModified: PropTypes.func,\n  date: PropTypes.instanceOf(Date),\n};\n\nexport default Task;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../task/task';\nimport './taskList.css';\n\nconst TaskList = ({ tasks, onDeleted, onToggleDone, onToggleModified }) => (\n  <ul className=\"todo-list\">\n    {tasks.map(({ label, done, hidden, modified, id, date, min, sec }) => (\n      <Task\n        key={id}\n        min={min}\n        sec={sec}\n        date={date}\n        done={done}\n        label={label}\n        hidden={hidden}\n        modified={modified}\n        onDeleted={() => onDeleted(id)}\n        onToggleDone={() => onToggleDone(id)}\n        onToggleModified={() => onToggleModified(id)}\n      />\n    ))}\n  </ul>\n);\n\nTaskList.defaultProps = {\n  tasks: [],\n  onDeleted: () => {},\n  onToggleDone: () => {},\n  onToggleModified: () => {},\n};\n\nTaskList.propTypes = {\n  onDeleted: PropTypes.func,\n  onToggleDone: PropTypes.func,\n  onToggleModified: PropTypes.func,\n  tasks: PropTypes.arrayOf(PropTypes.any),\n};\n\nexport default TaskList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './newTaskForm.css';\n\nconst NewTaskForm = ({ minutes, seconds, onTaskAdded, onMinChange, onSecChange }) => {\n  const [label, setLabel] = useState('');\n\n  const onLabelChange = (event) => {\n    setLabel(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    if (event.keyCode === 13) {\n      onTaskAdded(label);\n      setLabel('');\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <form className=\"new-todo-form\">\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"new-todo\"\n          value={label}\n          onKeyDown={onSubmit}\n          onChange={onLabelChange}\n          placeholder=\"What needs to be done?\"\n        />\n        <input\n          min=\"0\"\n          max=\"59\"\n          type=\"number\"\n          className=\"new-todo-form__timer\"\n          placeholder=\"Min\"\n          value={minutes}\n          onKeyDown={onSubmit}\n          onChange={onMinChange}\n        />\n        <input\n          min=\"0\"\n          max=\"59\"\n          type=\"number\"\n          className=\"new-todo-form__timer\"\n          placeholder=\"Sec\"\n          value={seconds}\n          onKeyDown={onSubmit}\n          onChange={onSecChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nNewTaskForm.defaultProps = {\n  minutes: '',\n  seconds: '',\n  onTaskAdded: () => {},\n  onSecChange: () => {},\n  onMinChange: () => {},\n};\n\nNewTaskForm.propTypes = {\n  minutes: PropTypes.string,\n  seconds: PropTypes.string,\n  onTaskAdded: PropTypes.func,\n  onSecChange: PropTypes.func,\n  onMinChange: PropTypes.func,\n};\n\nexport default NewTaskForm;\n","import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport Footer from '../footer/footer';\nimport TaskList from '../taskList/taskList';\nimport NewTaskForm from '../newTaskForm/newTaskForm';\nimport './todo.css';\n\nconst Todo = () => {\n  function createTask(label, min, sec) {\n    return {\n      sec,\n      min,\n      label,\n      id: uuid(),\n      done: false,\n      hidden: false,\n      modified: false,\n      isStarted: false,\n      date: new Date(),\n    };\n  }\n\n  function createFilter(label, hasClass) {\n    return {\n      label,\n      hasClass,\n    };\n  }\n\n  const [todoData, setTodoData] = useState([\n    createTask('Completed task', '12', '30'),\n    createTask('Editing task', '12', '30'),\n    createTask('Active task', '12', '30'),\n  ]);\n\n  const [filtersData, setFiltersData] = useState([\n    createFilter('All', true),\n    createFilter('Active', false),\n    createFilter('Completed', false),\n  ]);\n\n  const [activeFilter, setActiveFilter] = useState('All');\n  const [minutes, setMinutes] = useState('');\n  const [seconds, setSeconds] = useState('');\n\n  const deleteDoneTasks = () => {\n    setTodoData((todoData) => todoData.filter((el) => !el.done));\n  };\n\n  const onSelected = (label) => {\n    setFiltersData((filtersData) =>\n      filtersData.map((el) => {\n        if (el.label !== label) {\n          return { ...el, hasClass: false };\n        }\n\n        return { ...el, hasClass: true };\n      })\n    );\n\n    setActiveFilter(() => label);\n  };\n\n  const deleteTask = (id) => {\n    setTodoData((todoData) => todoData.filter((el) => el.id !== id));\n  };\n\n  const addTask = (label) => {\n    let min = minutes;\n    let sec = seconds;\n\n    if (Number(minutes) < 10) {\n      min = `0${Number(minutes)}`;\n    }\n\n    if (seconds < 10) {\n      sec = `0${Number(seconds)}`;\n    }\n\n    if (label) {\n      const newTask = createTask(label, min, sec);\n\n      setTodoData((todoData) => [...todoData, newTask]);\n      setMinutes(() => '');\n      setSeconds(() => '');\n    }\n  };\n\n  const onToggleDone = (id) => {\n    setTodoData((todoData) =>\n      todoData.map((el) => {\n        if (el.id === id) {\n          return { ...el, done: !el.done };\n        }\n\n        return el;\n      })\n    );\n  };\n\n  const onToggleModified = (id) => {\n    setTodoData((todoData) =>\n      todoData.map((el) => {\n        if (el.id === id) {\n          return { ...el, modified: !el.modified };\n        }\n\n        return el;\n      })\n    );\n  };\n\n  const onMinChange = (event) => {\n    let min = event.target.value;\n\n    if (Number(min) > 59) {\n      min = '59';\n    }\n\n    setMinutes(() => min);\n  };\n\n  const onSecChange = (event) => {\n    let sec = event.target.value;\n\n    if (Number(sec) > 59) {\n      sec = '59';\n    }\n\n    setSeconds(() => sec);\n  };\n\n  function checkActiveFilter(activeFilter, el) {\n    switch (activeFilter) {\n      case 'Active':\n        if (el.done) {\n          return { ...el, hidden: true };\n        }\n\n        return { ...el, hidden: false };\n      case 'Completed':\n        if (!el.done) {\n          return { ...el, hidden: true };\n        }\n\n        return { ...el, hidden: false };\n      default:\n        return null;\n    }\n  }\n\n  const todoCount = todoData.filter((el) => !el.done).length;\n  const todoDataForRender =\n    activeFilter === 'All' ? todoData : todoData.map((el) => checkActiveFilter(activeFilter, el));\n\n  return (\n    <section className=\"todoapp\">\n      <NewTaskForm\n        minutes={minutes}\n        seconds={seconds}\n        onTaskAdded={addTask}\n        onMinChange={onMinChange}\n        onSecChange={onSecChange}\n      />\n      <section className=\"main\">\n        <TaskList\n          tasks={todoDataForRender}\n          onDeleted={deleteTask}\n          onToggleDone={onToggleDone}\n          onToggleModified={onToggleModified}\n        />\n        <Footer toDo={todoCount} filters={filtersData} selecteFilter={onSelected} clearCompleted={deleteDoneTasks} />\n      </section>\n    </section>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todo from './Components/todo/todo';\n\nReactDOM.render(<Todo />, document.getElementById('container'));\n"],"sourceRoot":""}